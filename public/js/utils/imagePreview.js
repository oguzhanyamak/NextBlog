/**
 * SeÃ§ilen gÃ¶rselin Ã¶nizlemesini oluÅŸturur ve ekrana gÃ¶sterir.
 * @param {HTMLElement} $imageField - GÃ¶rsel seÃ§me input'u (file input)
 * @param {HTMLElement} $imagePreview - Ã–nizlemenin gÃ¶sterileceÄŸi alan
 * @returns {Promise<string>} - GÃ¶rselin geÃ§ici URL'sini dÃ¶ndÃ¼rÃ¼r
 */
const imagePreview = async function ($imageField, $imagePreview) {
    // ğŸ“Œ KullanÄ±cÄ±nÄ±n seÃ§tiÄŸi gÃ¶rsel iÃ§in geÃ§ici bir URL oluÅŸtur
    const imageObjectUrl = URL.createObjectURL($imageField.files[0]);

    // ğŸ“Œ Yeni bir <img> elementi oluÅŸtur
    const $image = document.createElement('img');
    $image.classList.add('img-cover'); // CSS sÄ±nÄ±fÄ±nÄ± ekle (kaplamalÄ± gÃ¶rÃ¼nÃ¼m)
    $image.src = imageObjectUrl; // GÃ¶rsel kaynaÄŸÄ±nÄ± oluÅŸturulan URL'ye ayarla

    // ğŸ“Œ Ã–nizleme alanÄ±na resmi ekle
    $imagePreview.append($image);
    $imagePreview.classList.add('show'); // Ã–nizleme alanÄ±nÄ± gÃ¶rÃ¼nÃ¼r hale getir

    return imageObjectUrl; // OluÅŸturulan gÃ¶rsel URL'sini dÃ¶ndÃ¼r
};

export default imagePreview;
